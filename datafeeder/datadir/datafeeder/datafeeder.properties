publicUrl=http://localhost:8080
file-upload.max-file-size=512MB
file-upload.max-request-size=512MB
file-upload.file-size-threshold=1MB
file-upload.temporary-location=${java.io.tmpdir}/datafeeder/tmp
file-upload.persistent-location=${java.io.tmpdir}/datafeeder/uploads
front-end.config.uri=file:${georchestra.datadir}/datafeeder/frontend-config.json
datafeeder.publishing.geoserver.public-url=http://localhost:8080/geoserver
datafeeder.publishing.geoserver.api-url=http://geoserver:8080/geoserver/rest
datafeeder.publishing.geoserver.auth.type=headers
datafeeder.publishing.geoserver.auth.headers.[sec-proxy]=true
datafeeder.publishing.geoserver.auth.headers.[sec-username]=idatafeeder
datafeeder.publishing.geoserver.auth.headers.[sec-roles]=ROLE_ADMINISTRATOR;ROLE_GN_ADMIN
datafeeder.publishing.geonetwork.api-url=http://geonetwork:8080/geonetwork
datafeeder.publishing.geonetwork.public-url=http://geonetwork:8080/geonetwork
datafeeder.publishing.geonetwork.auth.type=headers
datafeeder.publishing.geonetwork.auth.headers.[sec-proxy]=true
datafeeder.publishing.geonetwork.auth.headers.[sec-username]=idatafeeder
datafeeder.publishing.geonetwork.auth.headers.[sec-org]=geOrchestra
datafeeder.publishing.geonetwork.auth.headers.[sec-roles]=ROLE_ADMINISTRATOR;ROLE_GN_ADMIN
datafeeder.publishing.geonetwork.auth.headers.[X-XSRF-TOKEN]=c9f33266-e242-4198-a18c-b01290dce5f1
datafeeder.publishing.geonetwork.auth.headers.[Cookie]=XSRF-TOKEN=c9f33266-e242-4198-a18c-b01290dce5f1
datafeeder.publishing.geonetwork.template-record: file:${georchestra.datadir}/datafeeder/metadata_template.xml
datafeeder.publishing.geonetwork.template-transform: file:${georchestra.datadir}/datafeeder/metadata_transform.xsl
datafeeder.publishing.backend.local.dbtype=postgis
datafeeder.publishing.backend.local.host=${pgsqlHost}
datafeeder.publishing.backend.local.port=${pgsqlPort}
datafeeder.publishing.backend.local.database=${pgsqlDatabase}
datafeeder.publishing.backend.local.schema=<schema>
datafeeder.publishing.backend.local.user=${pgsqlUser}
datafeeder.publishing.backend.local.passwd=${pgsqlPassword}
datafeeder.publishing.backend.local.preparedStatements=true
datafeeder.publishing.backend.geoserver.dbtype=postgis
datafeeder.publishing.backend.geoserver.preparedStatements=true
datafeeder.publishing.backend.geoserver.schema=<schema>
datafeeder.publishing.backend.geoserver.workspacename=<workspacename>
datafeeder.publishing.backend.geoserver.storename=<storename>
datafeeder.publishing.backend.geoserver.host=${pgsqlHost}
datafeeder.publishing.backend.geoserver.port=${pgsqlPort}
datafeeder.publishing.backend.geoserver.database=${pgsqlDatabase}
datafeeder.publishing.backend.geoserver.user=${pgsqlUser}
datafeeder.publishing.backend.geoserver.passwd=${pgsqlPassword}
datafeeder.publishing.backend.geoserver.[Loose\ bbox]=false
datafeeder.publishing.backend.geoserver.[Estimated\ extends]=true
datafeeder.email.ackTemplate=file:${georchestra.datadir}/datafeeder/templates/analysis-started-email-template.txt
datafeeder.email.analysisFailedTemplate=file:${georchestra.datadir}/datafeeder/templates/analysis-failed-email-template.txt
datafeeder.email.publishFailedTemplate=file:${georchestra.datadir}/datafeeder/templates/data-publishing-failed-email-template.txt
datafeeder.email.publishSuccessTemplate=file:${georchestra.datadir}/datafeeder/templates/data-publishing-succeeded-email-template.txt
administratorEmail=georchestra@georchestra.mydomain.org
smtpUser=
smtpPassword=
smtpAuth=false
smtpTLS=false
spring.mail.host=${smtpHost}
spring.mail.port=${smtpPort}
spring.mail.username=${smtpUser:}
spring.mail.password=${smtpPassword:}
spring.mail.protocol=smtp
spring.mail.test-connection=${smtpTest:true}
spring.mail.properties.mail.smtp.auth=${smtpAuth:false}
spring.mail.properties.mail.smtp.starttls.enable=${smtpTLS:false}
