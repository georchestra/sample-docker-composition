# Default georchestra gateway specific configuration, always imported from application.yml
# configure target base URL's, headers and role based access, per service name.
# Replaces security-proxy's targets-mapping.properties, headers-mapping.properties, and security-mappings.xml
#
spring.config.import: security.yaml, routes.yaml, roles-mappings.yaml

georchestra:
  gateway:
    default-headers:
      # Default security headers to append to proxied requests
      proxy: true
      username: true
      roles: true
      org: true
      orgname: true
      email: true
      firstName: true
      lastName: true
      userid: false
      lastUpdated: false
      tel: false
      address: false
      title: false
      notes: false
      orgid: false
      orgLastUpdated: false
      jsonUser: false
      jsonOrganization: false
    global-access-rules:
    - intercept-url:
      - /**
      anonymous: true
    services:
      analytics:
        target: http://analytics:8080/analytics/
        headers:
          proxy: true
          username: true
          roles: true
          org: true
        access-rules:
        - intercept-url: /analytics/**
          allowed-roles: ROLE_SUPERUSER, ROLE_ORGADMIN
      atlas:
        target: http://atlas:8080/atlas/
      console:
        target: http://console:8080/console/
        access-rules:
        - intercept-url:
          - /console/public/**
          - /console/manager/public/**
          #/console/account resources are private except account/new and account/passwordRecovery
          - /console/account/new
          - /console/account/newPassword
          - /console/account/passwordRecovery
          - /console/account/js/**
          - /console/account/css/**
          - /console/account/fonts/**
          - /console/testPage
          anonymous: true
        - intercept-url:
          - /console/private/**
          - /console/manager/**
          - /console/*/emails
          - /console/*/sendEmail # /console/sendEmail features are reserved to SUPERUSER & delegated admins
          - /console/*/emailTemplates
          - /console/attachments
          allowed-roles: SUPERUSER,ORGADMIN
        - intercept-url: /console/emailProxy #activated for members having the EMAILPROXY role
          allowed-roles: EMAILPROXY
        - intercept-url: /console/internal/**
          allowed-roles: SUPERUSER
        - intercept-url: /console/account/**
          anonymous: false
      extractorapp:
        target: http://extractorapp:8080/extractorapp/
        access-rules:
        - intercept-url: /extractorapp/admin*
          allowed-roles: ADMINISTRATOR
        - intercept-url: /extractorapp/jobs/**
          allowed-roles: ADMINISTRATOR
        - intercept-url: /extractorapp/**
          allowed-roles: EXTRACTORAPP
      geonetwork:
        target: http://geonetwork:8080/geonetwork/
        access-rules:
        - intercept-url: /geonetwork/**
          anonymous: true
        headers:
          proxy: true
          username: false
          roles: false
          org: false
          orgname: true
          json-user: true
      geoserver:
        target: http://geoserver:8080/geoserver/
        access-rules:
        - intercept-url: /geoserver/**
          anonymous: true
      geofence:
        target: http://geofence:8080/geofence/
        access-rules:
        - intercept-url: /geofence/**
          allowed-roles: ADMINISTRATOR
      header:
        target: http://header:8080/header/
        access-rules:
        - intercept-url: /header/**
          anonymous: true
      mapfishapp:
        target: http://mapfishapp:8080/mapfishapp/
        access-rules:
        - intercept-url: /mapfishapp/ogcproxy/**
          forbidden: true
        - intercept-url: /mapfishapp/**
          anonymous: true
      geowebcache:
        target: http://geowebcache:8080/geowebcache/
      mapstore:
        target: http://mapstore:8080/mapstore/
      datafeeder:
        target: http://datafeeder:8080/datafeeder
        headers:
          proxy: true
          username: false
          roles: false
          org: false
          orgname: false
          json-user: true
          json-organization: true
        access-rules:
        - intercept-url: /datafeeder/**
          anonymous: false
      import:
        target: http://import:80/
        access-rules:
        - intercept-url: /import/**
          anonymous: false

---
# docker profile, sets backend services target URLs to match default docker-compose host names and ports
spring.config.activate.on-profile: docker
ldapHost: ldap
georchestra.gateway.services:
  analytics.target: http://analytics:8080/analytics/
  atlas.target: http://atlas:8080/atlas/
  console.target: http://console:8080/console/
  datafeeder.target: http://datafeeder:8080/datafeeder
  extractorapp.target: http://extractorapp:8080/extractorapp/
  geonetwork.target: http://geonetwork:8080/geonetwork/
  geoserver.target: http://geoserver:8080/geoserver/
  geowebcache.target: http://geowebcache:8080/geowebcache/
  header.target: http://header:8080/header/
  import.target: http://import:80/
  mapfishapp.target: http://mapfishapp:8080/mapfishapp/
  mapstore.target: http://mapstore:8080/mapstore/

---
spring.config.activate.on-profile: dev

georchestra.gateway.security:
  oauth2.enabled: false
  ldap:
    default:
      enabled: true
      url: ldap://localhost:3891
    ldap2:
      enabled: true
      url: ldap://localhost:3899

georchestra.gateway.services:
  header.target: http://localhost:10003/header/
  mapfishapp.target: http://localhost:10004/mapfishapp/
  extractorapp.target: http://localhost:10005/extractorapp/
  geoserver.target: http://localhost:10006/geoserver/
  console.target: http://localhost:10007/console/
  geonetwork.target: http://localhost:10008/geonetwork/
  analytics.target: http://localhost:10009/analytics/
  mapstore.target: http://localhost:10010/mapstore/
  datafeeder.target: http://localhost:10011/datafeeder
  import.target: http://localhost:10012/
  atlas.target: http://localhost:8080/atlas/
  geowebcache.target: http://localhost:8080/geowebcache/

---
spring.config.activate.on-profile: casoauth2
debug: true
logging:
  level:
    root: warn
    '[org.springframework]': debug
    '[org.springframework.cloud.gateway]': info
    '[org.springframework.security]': debug
    '[org.springframework.security.oauth2]': debug
    '[org.springframework.http.codec.json]': debug
    '[org.springframework.security.oauth2.client.oidc]': debug
    '[org.georchestra.gateway]': info
    '[org.georchestra.gateway.accesslog]': info
    '[org.georchestra.gateway.security]': debug
    '[org.springframework.security.ldap]': info
server:
  forward-headers-strategy: FRAMEWORK
logging.level.org.springframework: INFO
logging.level.org.springframework.security.oauth2.client: DEBUG
georchestra:
  gateway:
    security:
      oauth2:
        enabled: true
spring:
  security:
    oauth2:
      client:
        registration:
          cas-oauth2:
            client-id: oauth2
            client-secret: oauth2
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/cas-oauth2"
        provider:
          cas-oauth2:
            authorization-uri: http://localhost:8080/cas/oauth2.0/authorize
            token-uri: http://cas:8080/cas/oauth2.0/accessToken
            user-info-uri: http://cas:8080/cas/oauth2.0/profile
            userNameAttribute: id
